# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-12-17 03:38
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Context',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verbatim_collection_no', models.IntegerField(blank=True, null=True)),
                ('verbatim_record_type', models.CharField(blank=True, max_length=20, null=True)),
                ('verbatim_formation', models.CharField(blank=True, max_length=50, null=True)),
                ('verbatim_member', models.CharField(blank=True, max_length=50, null=True)),
                ('verbatim_lng', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('verbatim_lat', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('verbatim_collection_name', models.CharField(blank=True, max_length=200, null=True)),
                ('verbatim_collection_subset', models.CharField(blank=True, max_length=20, null=True)),
                ('verbatim_collection_aka', models.CharField(blank=True, max_length=200, null=True)),
                ('verbatim_n_occs', models.IntegerField(blank=True, null=True)),
                ('verbatim_early_interval', models.CharField(blank=True, max_length=50, null=True)),
                ('verbatim_late_interval', models.CharField(blank=True, max_length=50, null=True)),
                ('verbatim_max_ma', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('verbatim_min_ma', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('verbatim_reference_no', models.IntegerField(blank=True, null=True)),
                ('source', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('geological_formation', models.CharField(blank=True, max_length=50, null=True, verbose_name='Formation')),
                ('geological_member', models.CharField(blank=True, max_length=50, null=True, verbose_name='Member')),
                ('geological_bed', models.CharField(blank=True, max_length=50, null=True)),
                ('older_interval', models.CharField(blank=True, max_length=50, null=True)),
                ('younger_interval', models.CharField(blank=True, max_length=50, null=True)),
                ('max_age', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('min_age', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('best_age', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('mio_plio', models.BooleanField(default=False)),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Fossil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verbatim_PlaceName', models.CharField(blank=True, max_length=100, null=True)),
                ('verbatim_HomininElement', models.CharField(blank=True, max_length=40, null=True)),
                ('verbatim_HomininElementNotes', models.TextField(blank=True, null=True)),
                ('verbatim_SkeletalElement', models.CharField(blank=True, max_length=40, null=True)),
                ('verbatim_SkeletalElementSubUnit', models.CharField(blank=True, max_length=40, null=True)),
                ('verbatim_SkeletalElementSubUnitDescriptor', models.CharField(blank=True, max_length=100, null=True)),
                ('verbatim_SkeletalElementSide', models.CharField(blank=True, max_length=40, null=True)),
                ('verbatim_SkeletalElementPosition', models.CharField(blank=True, max_length=40, null=True)),
                ('verbatim_SkeletalElementComplete', models.CharField(blank=True, max_length=40, null=True)),
                ('verbatim_SkeletalElementClass', models.CharField(blank=True, max_length=40, null=True)),
                ('verbatim_Locality', models.CharField(blank=True, max_length=40, null=True)),
                ('verbatim_Country', models.CharField(blank=True, max_length=20, null=True)),
                ('place_name', models.CharField(blank=True, max_length=100, null=True)),
                ('guid', models.URLField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4)),
                ('catalog_number', models.CharField(blank=True, max_length=40, null=True)),
                ('organism_id', models.CharField(blank=True, max_length=40, null=True)),
                ('nickname', models.CharField(blank=True, max_length=40, null=True)),
                ('holotype', models.BooleanField(default=False)),
                ('lifestage', models.CharField(blank=True, max_length=20, null=True)),
                ('sex', models.CharField(blank=True, max_length=10, null=True)),
                ('project_name', models.CharField(blank=True, max_length=100, null=True)),
                ('project_abbreviation', models.CharField(blank=True, max_length=10, null=True)),
                ('collection_code', models.CharField(blank=True, max_length=10, null=True)),
                ('origins', models.BooleanField(default=False)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Modified')),
                ('modified', models.DateTimeField(auto_now=True, help_text='The date and time this resource was last altered.', verbose_name='Modified')),
                ('locality', models.CharField(blank=True, max_length=40, null=True)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True, verbose_name='Country')),
                ('continent', models.CharField(blank=True, max_length=20, null=True)),
                ('verbatim_provenience', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, max_length=255, null=True, upload_to='uploads/images/origins')),
                ('context', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='origins.Context')),
            ],
        ),
        migrations.CreateModel(
            name='FossilElement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verbatim_PlaceName', models.CharField(blank=True, max_length=100, null=True)),
                ('verbatim_HomininElement', models.CharField(blank=True, max_length=40, null=True)),
                ('verbatim_HomininElementNotes', models.TextField(blank=True, null=True)),
                ('verbatim_SkeletalElement', models.CharField(blank=True, max_length=40, null=True)),
                ('verbatim_SkeletalElementSubUnit', models.CharField(blank=True, max_length=40, null=True)),
                ('verbatim_SkeletalElementSubUnitDescriptor', models.CharField(blank=True, max_length=100, null=True)),
                ('verbatim_SkeletalElementSide', models.CharField(blank=True, max_length=40, null=True)),
                ('verbatim_SkeletalElementPosition', models.CharField(blank=True, max_length=40, null=True)),
                ('verbatim_SkeletalElementComplete', models.CharField(blank=True, max_length=40, null=True)),
                ('verbatim_SkeletalElementClass', models.CharField(blank=True, max_length=40, null=True)),
                ('verbatim_Locality', models.CharField(blank=True, max_length=40, null=True)),
                ('verbatim_Country', models.CharField(blank=True, max_length=20, null=True)),
                ('hominin_element', models.CharField(blank=True, max_length=40, null=True)),
                ('hominin_element_notes', models.TextField(blank=True, null=True)),
                ('skeletal_element', models.CharField(blank=True, max_length=40, null=True)),
                ('skeletal_element_subunit', models.CharField(blank=True, max_length=40, null=True)),
                ('skeletal_element_subunit_descriptor', models.CharField(blank=True, max_length=100, null=True)),
                ('skeletal_element_side', models.CharField(blank=True, max_length=40, null=True)),
                ('skeletal_element_position', models.CharField(blank=True, max_length=40, null=True)),
                ('skeletal_element_complete', models.CharField(blank=True, max_length=40, null=True)),
                ('skeletal_element_class', models.CharField(blank=True, max_length=40, null=True)),
                ('continent', models.CharField(blank=True, max_length=20, null=True)),
                ('fossil', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fossil_element', to='origins.Fossil')),
            ],
        ),
        migrations.CreateModel(
            name='IdentificationQualifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=15, unique=True)),
                ('qualified', models.BooleanField()),
            ],
            options={
                'verbose_name': 'Identification Qualifer',
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='uploads/images/origins', verbose_name='Image')),
                ('fossil', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='origins.Fossil')),
            ],
            options={
                'verbose_name': 'Image',
                'verbose_name_plural': 'Images',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_no', models.IntegerField(blank=True, null=True)),
                ('record_type', models.CharField(blank=True, max_length=5, null=True)),
                ('ref_type', models.CharField(blank=True, max_length=201, null=True)),
                ('author1init', models.CharField(blank=True, max_length=202, null=True)),
                ('author1last', models.CharField(blank=True, max_length=203, null=True)),
                ('author2init', models.CharField(blank=True, max_length=204, null=True)),
                ('author2last', models.CharField(blank=True, max_length=205, null=True)),
                ('otherauthors', models.TextField(blank=True, null=True)),
                ('pubyr', models.CharField(blank=True, max_length=207, null=True)),
                ('reftitle', models.TextField(blank=True, null=True)),
                ('pubtitle', models.TextField(blank=True, null=True)),
                ('editors', models.TextField(blank=True, null=True)),
                ('pubvol', models.CharField(blank=True, max_length=210, null=True)),
                ('pubno', models.CharField(blank=True, max_length=211, null=True)),
                ('firstpage', models.CharField(blank=True, max_length=212, null=True)),
                ('lastpage', models.CharField(blank=True, max_length=213, null=True)),
                ('publication_type', models.CharField(blank=True, max_length=200, null=True)),
                ('language', models.CharField(blank=True, max_length=214, null=True)),
                ('doi', models.CharField(blank=True, max_length=215, null=True)),
                ('source', models.CharField(blank=True, max_length=216, null=True)),
                ('reference_pdf', models.FileField(blank=True, max_length=255, null=True, upload_to='uploads/files/origins')),
                ('fossil', models.ManyToManyField(to='origins.Fossil')),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verbatim_collection_no', models.IntegerField(blank=True, null=True)),
                ('verbatim_record_type', models.CharField(blank=True, max_length=20, null=True)),
                ('verbatim_formation', models.CharField(blank=True, max_length=50, null=True)),
                ('verbatim_lng', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('verbatim_lat', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('verbatim_collection_name', models.CharField(blank=True, max_length=200, null=True)),
                ('verbatim_collection_subset', models.CharField(blank=True, max_length=20, null=True)),
                ('verbatim_collection_aka', models.CharField(blank=True, max_length=200, null=True)),
                ('verbatim_n_occs', models.IntegerField(blank=True, null=True)),
                ('verbatim_early_interval', models.CharField(blank=True, max_length=50, null=True)),
                ('verbatim_late_interval', models.CharField(blank=True, max_length=50, null=True)),
                ('verbatim_max_ma', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('verbatim_min_ma', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('verbatim_reference_no', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=40, null=True)),
                ('source', models.CharField(blank=True, max_length=20, null=True)),
                ('mio_plio', models.BooleanField(default=False)),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Taxon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='origins.Taxon')),
            ],
            options={
                'verbose_name': 'Taxon',
                'verbose_name_plural': 'Taxa',
                'ordering': ['rank__ordinal', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TaxonRank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('plural', models.CharField(max_length=50, unique=True)),
                ('ordinal', models.IntegerField(unique=True)),
            ],
            options={
                'verbose_name': 'LGRP Taxon Rank',
            },
        ),
        migrations.AddField(
            model_name='taxon',
            name='rank',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='origins.TaxonRank'),
        ),
        migrations.AddField(
            model_name='context',
            name='reference',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='origins.Reference'),
        ),
        migrations.AddField(
            model_name='context',
            name='site',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='origins.Site'),
        ),
    ]
