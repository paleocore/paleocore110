# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-05-26 23:57
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='uploads/files')),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Hydrology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('length', models.DecimalField(blank=True, decimal_places=8, max_digits=38, null=True)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('size', models.IntegerField(blank=True, null=True)),
                ('map_sheet', models.CharField(blank=True, max_length=50, null=True)),
                ('geom', django.contrib.gis.db.models.fields.LineStringField(srid=4326)),
            ],
            options={
                'verbose_name': 'HRP Hydrology',
                'verbose_name_plural': 'HRP Hydrology',
            },
        ),
        migrations.CreateModel(
            name='IdentificationQualifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=15, unique=True)),
                ('qualified', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='uploads/images')),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Locality',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('collection_code', models.CharField(blank=True, choices=[('A.L.', 'A.L.')], max_length=10, null=True)),
                ('locality_number', models.IntegerField(blank=True, null=True)),
                ('sublocality', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
                ('stratigraphic_section', models.CharField(blank=True, max_length=50, null=True)),
                ('upper_limit_in_section', models.IntegerField(blank=True, null=True)),
                ('lower_limit_in_section', models.DecimalField(blank=True, decimal_places=8, max_digits=38, null=True)),
                ('error_notes', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.CharField(blank=True, max_length=254, null=True)),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('date_last_modified', models.DateTimeField(auto_now=True, verbose_name='Date Last Modified')),
            ],
            options={
                'verbose_name': 'HRP Locality',
                'verbose_name_plural': 'HRP Localities',
                'ordering': ('locality_number', 'sublocality'),
            },
        ),
        migrations.CreateModel(
            name='Occurrence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('basis_of_record', models.CharField(blank=True, choices=[('Collection', 'Collection'), ('Observation', 'Observation')], max_length=50, verbose_name='Basis of Record')),
                ('item_type', models.CharField(blank=True, choices=[('Artifactual', 'Artifactual'), ('Faunal', 'Faunal'), ('Floral', 'Floral'), ('Geological', 'Geological')], max_length=255, verbose_name='Item Type')),
                ('collection_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Collection Code')),
                ('item_number', models.IntegerField(blank=True, null=True, verbose_name='Item #')),
                ('item_part', models.CharField(blank=True, max_length=10, null=True, verbose_name='Item Part')),
                ('remarks', models.TextField(blank=True, max_length=2500, null=True, verbose_name='Remarks')),
                ('item_scientific_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sci Name')),
                ('item_description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Description')),
                ('georeference_remarks', models.TextField(blank=True, max_length=50, null=True)),
                ('collecting_method', models.CharField(choices=[('Survey', 'Survey'), ('dryscreen5mm', 'dryscreen5mm'), ('wetscreen1mm', 'wetscreen1mm')], max_length=50, null=True)),
                ('related_catalog_items', models.CharField(blank=True, max_length=50, null=True, verbose_name='Related Catalog Items')),
                ('field_number', models.CharField(blank=True, max_length=50, null=True)),
                ('collector', models.CharField(blank=True, choices=[('C.J. Campisano', 'C.J. Campisano'), ('W.H. Kimbel', 'W.H. Kimbel'), ('T.K. Nalley', 'T.K. Nalley'), ('D.N. Reed', 'D.N. Reed'), ('Kaye Reed', 'Kaye Reed'), ('B.J. Schoville', 'B.J. Schoville'), ('A.E. Shapiro', 'A.E. Shapiro'), ('HFS Student', 'HFS Student'), ('HRP Team', 'HRP Team')], max_length=50, null=True)),
                ('finder', models.CharField(blank=True, max_length=50, null=True)),
                ('disposition', models.CharField(blank=True, max_length=255, null=True)),
                ('collection_remarks', models.TextField(blank=True, max_length=255, null=True, verbose_name='Remarks')),
                ('date_recorded', models.DateTimeField(blank=True, null=True)),
                ('year_collected', models.IntegerField(blank=True, null=True)),
                ('individual_count', models.IntegerField(blank=True, default=1, null=True)),
                ('preparation_status', models.CharField(blank=True, max_length=50, null=True)),
                ('stratigraphic_marker_upper', models.CharField(blank=True, max_length=255, null=True)),
                ('distance_from_upper', models.DecimalField(blank=True, decimal_places=8, max_digits=38, null=True)),
                ('stratigraphic_marker_lower', models.CharField(blank=True, max_length=255, null=True)),
                ('distance_from_lower', models.DecimalField(blank=True, decimal_places=8, max_digits=38, null=True)),
                ('stratigraphic_marker_found', models.CharField(blank=True, max_length=255, null=True)),
                ('distance_from_found', models.DecimalField(blank=True, decimal_places=8, max_digits=38, null=True)),
                ('stratigraphic_marker_likely', models.CharField(blank=True, max_length=255, null=True)),
                ('distance_from_likely', models.DecimalField(blank=True, decimal_places=8, max_digits=38, null=True)),
                ('stratigraphic_formation', models.CharField(blank=True, max_length=255, null=True)),
                ('stratigraphic_member', models.CharField(blank=True, max_length=255, null=True)),
                ('analytical_unit', models.CharField(blank=True, max_length=255, null=True)),
                ('analytical_unit_2', models.CharField(blank=True, max_length=255, null=True)),
                ('analytical_unit_3', models.CharField(blank=True, max_length=255, null=True)),
                ('analytical_unit_found', models.CharField(blank=True, max_length=255, null=True)),
                ('analytical_unit_likely', models.CharField(blank=True, max_length=255, null=True)),
                ('analytical_unit_simplified', models.CharField(blank=True, max_length=255, null=True)),
                ('in_situ', models.BooleanField(default=False)),
                ('ranked', models.BooleanField(default=False)),
                ('image', models.FileField(blank=True, max_length=255, null=True, upload_to='uploads/images/hrp')),
                ('weathering', models.SmallIntegerField(blank=True, null=True)),
                ('surface_modification', models.CharField(blank=True, max_length=255, null=True)),
                ('problem', models.BooleanField(default=False)),
                ('problem_comment', models.TextField(blank=True, max_length=255, null=True)),
                ('barcode', models.IntegerField(blank=True, null=True, verbose_name='Barcode')),
                ('date_last_modified', models.DateTimeField(auto_now=True, verbose_name='Date Last Modified')),
                ('drainage_region', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'HRP Occurrence',
                'verbose_name_plural': 'HRP Occurrences',
                'ordering': ['collection_code', 'locality', 'item_number', 'item_part'],
            },
        ),
        migrations.CreateModel(
            name='Taxon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hrp.Taxon')),
            ],
            options={
                'verbose_name': 'Taxon',
                'verbose_name_plural': 'taxa',
                'ordering': ['rank__ordinal', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TaxonRank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('plural', models.CharField(max_length=50, unique=True)),
                ('ordinal', models.IntegerField(unique=True)),
            ],
            options={
                'verbose_name': 'Taxon Rank',
            },
        ),
        migrations.CreateModel(
            name='Archaeology',
            fields=[
                ('occurrence_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hrp.Occurrence')),
                ('find_type', models.CharField(blank=True, max_length=255, null=True)),
                ('length_mm', models.DecimalField(blank=True, decimal_places=8, max_digits=38, null=True)),
                ('width_mm', models.DecimalField(blank=True, decimal_places=8, max_digits=38, null=True)),
            ],
            options={
                'verbose_name': 'HRP Archaeology',
                'verbose_name_plural': 'HRP Archaeology',
            },
            bases=('hrp.occurrence',),
        ),
        migrations.CreateModel(
            name='Biology',
            fields=[
                ('occurrence_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hrp.Occurrence')),
                ('verbatim_taxon', models.CharField(blank=True, max_length=1024, null=True)),
                ('verbatim_identification_qualifier', models.CharField(blank=True, max_length=255, null=True)),
                ('identified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('year_identified', models.IntegerField(blank=True, null=True)),
                ('type_status', models.CharField(blank=True, max_length=50, null=True)),
                ('sex', models.CharField(blank=True, max_length=50, null=True)),
                ('life_stage', models.CharField(blank=True, max_length=50, null=True)),
                ('preparations', models.CharField(blank=True, max_length=50, null=True)),
                ('morphobank_number', models.IntegerField(blank=True, null=True)),
                ('side', models.CharField(blank=True, max_length=50, null=True)),
                ('attributes', models.CharField(blank=True, max_length=50, null=True)),
                ('fauna_notes', models.TextField(blank=True, max_length=64000, null=True)),
                ('tooth_upper_or_lower', models.CharField(blank=True, max_length=50, null=True)),
                ('tooth_number', models.CharField(blank=True, max_length=50, null=True)),
                ('tooth_type', models.CharField(blank=True, max_length=50, null=True)),
                ('um_tooth_row_length_mm', models.DecimalField(blank=True, decimal_places=8, max_digits=38, null=True)),
                ('um_1_length_mm', models.DecimalField(blank=True, decimal_places=8, max_digits=38, null=True)),
                ('um_1_width_mm', models.DecimalField(blank=True, decimal_places=8, max_digits=38, null=True)),
                ('um_2_length_mm', models.DecimalField(blank=True, decimal_places=8, max_digits=38, null=True)),
                ('um_2_width_mm', models.DecimalField(blank=True, decimal_places=8, max_digits=38, null=True)),
                ('um_3_length_mm', models.DecimalField(blank=True, decimal_places=8, max_digits=38, null=True)),
                ('um_3_width_mm', models.DecimalField(blank=True, decimal_places=8, max_digits=38, null=True)),
                ('lm_tooth_row_length_mm', models.DecimalField(blank=True, decimal_places=8, max_digits=38, null=True)),
                ('lm_1_length', models.DecimalField(blank=True, decimal_places=8, max_digits=38, null=True)),
                ('lm_1_width', models.DecimalField(blank=True, decimal_places=8, max_digits=38, null=True)),
                ('lm_2_length', models.DecimalField(blank=True, decimal_places=8, max_digits=38, null=True)),
                ('lm_2_width', models.DecimalField(blank=True, decimal_places=8, max_digits=38, null=True)),
                ('lm_3_length', models.DecimalField(blank=True, decimal_places=8, max_digits=38, null=True)),
                ('lm_3_width', models.DecimalField(blank=True, decimal_places=8, max_digits=38, null=True)),
                ('element', models.CharField(blank=True, max_length=50, null=True)),
                ('element_modifier', models.CharField(blank=True, max_length=50, null=True)),
                ('uli1', models.BooleanField(default=False)),
                ('uli2', models.BooleanField(default=False)),
                ('uli3', models.BooleanField(default=False)),
                ('uli4', models.BooleanField(default=False)),
                ('uli5', models.BooleanField(default=False)),
                ('uri1', models.BooleanField(default=False)),
                ('uri2', models.BooleanField(default=False)),
                ('uri3', models.BooleanField(default=False)),
                ('uri4', models.BooleanField(default=False)),
                ('uri5', models.BooleanField(default=False)),
                ('ulc', models.BooleanField(default=False)),
                ('urc', models.BooleanField(default=False)),
                ('ulp1', models.BooleanField(default=False)),
                ('ulp2', models.BooleanField(default=False)),
                ('ulp3', models.BooleanField(default=False)),
                ('ulp4', models.BooleanField(default=False)),
                ('urp1', models.BooleanField(default=False)),
                ('urp2', models.BooleanField(default=False)),
                ('urp3', models.BooleanField(default=False)),
                ('urp4', models.BooleanField(default=False)),
                ('ulm1', models.BooleanField(default=False)),
                ('ulm2', models.BooleanField(default=False)),
                ('ulm3', models.BooleanField(default=False)),
                ('urm1', models.BooleanField(default=False)),
                ('urm2', models.BooleanField(default=False)),
                ('urm3', models.BooleanField(default=False)),
                ('lli1', models.BooleanField(default=False)),
                ('lli2', models.BooleanField(default=False)),
                ('lli3', models.BooleanField(default=False)),
                ('lli4', models.BooleanField(default=False)),
                ('lli5', models.BooleanField(default=False)),
                ('lri1', models.BooleanField(default=False)),
                ('lri2', models.BooleanField(default=False)),
                ('lri3', models.BooleanField(default=False)),
                ('lri4', models.BooleanField(default=False)),
                ('lri5', models.BooleanField(default=False)),
                ('llc', models.BooleanField(default=False)),
                ('lrc', models.BooleanField(default=False)),
                ('llp1', models.BooleanField(default=False)),
                ('llp2', models.BooleanField(default=False)),
                ('llp3', models.BooleanField(default=False)),
                ('llp4', models.BooleanField(default=False)),
                ('lrp1', models.BooleanField(default=False)),
                ('lrp2', models.BooleanField(default=False)),
                ('lrp3', models.BooleanField(default=False)),
                ('lrp4', models.BooleanField(default=False)),
                ('llm1', models.BooleanField(default=False)),
                ('llm2', models.BooleanField(default=False)),
                ('llm3', models.BooleanField(default=False)),
                ('lrm1', models.BooleanField(default=False)),
                ('lrm2', models.BooleanField(default=False)),
                ('lrm3', models.BooleanField(default=False)),
                ('indet_incisor', models.BooleanField(default=False)),
                ('indet_canine', models.BooleanField(default=False)),
                ('indet_premolar', models.BooleanField(default=False)),
                ('indet_molar', models.BooleanField(default=False)),
                ('indet_tooth', models.BooleanField(default=False)),
                ('deciduous', models.BooleanField(default=False)),
                ('identification_qualifier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hrp_id_qualifier_bio_occurrences', to='hrp.IdentificationQualifier')),
            ],
            options={
                'verbose_name': 'HRP Biology',
                'verbose_name_plural': 'HRP Biology',
            },
            bases=('hrp.occurrence',),
        ),
        migrations.CreateModel(
            name='Geology',
            fields=[
                ('occurrence_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hrp.Occurrence')),
                ('find_type', models.CharField(blank=True, max_length=255, null=True)),
                ('dip', models.DecimalField(blank=True, decimal_places=8, max_digits=38, null=True)),
                ('strike', models.DecimalField(blank=True, decimal_places=8, max_digits=38, null=True)),
                ('color', models.CharField(blank=True, max_length=255, null=True)),
                ('texture', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'HRP Geology',
                'verbose_name_plural': 'HRP Geology',
            },
            bases=('hrp.occurrence',),
        ),
        migrations.AddField(
            model_name='taxon',
            name='rank',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hrp.TaxonRank'),
        ),
        migrations.AddField(
            model_name='occurrence',
            name='locality',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hrp.Locality'),
        ),
        migrations.AddField(
            model_name='image',
            name='occurrence',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hrp_occurrences', to='hrp.Occurrence'),
        ),
        migrations.AddField(
            model_name='file',
            name='occurrence',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hrp.Occurrence'),
        ),
        migrations.AddField(
            model_name='biology',
            name='qualifier_taxon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hrp_qualifier_taxon_bio_occurrences', to='hrp.Taxon'),
        ),
        migrations.AddField(
            model_name='biology',
            name='taxon',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='hrp_taxon_bio_occurrences', to='hrp.Taxon'),
        ),
    ]
